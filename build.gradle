buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
    }
}

// the spotless plugin is dedicated to format the code
plugins {
  id("com.diffplug.spotless") version "7.0.3"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://repo1.maven.org/maven2"
    }
}

// add -Xlint:deprecation to check the Elasticsearch deprecation warning at compile-time
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
        }
    }
}

group = 'org.elasticsearch.plugin'
version = "${plugin_version}"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.yaml-rest-test'

// automatic formatting configuration (the same configuration as elasticsearch)
spotless {
    java {
        importOrderFile('config/elastic.importorder') // import order file as exported from elastic
        eclipse().configFile('config/formatterConfig.xml')
        trimTrailingWhitespace()
        target 'src/**/*.java'
    }
}

check.dependsOn spotlessCheck

esplugin {
    name 'geopoint-clustering-aggregation'
    description 'Aggregate clusters from geohash grid aggregation'
    classname 'com.opendatasoft.elasticsearch.plugin.GeoPointClusteringAggregationPlugin'
    licenseFile = rootProject.file('LICENSE')
    noticeFile = rootProject.file('README.md')
}

// exclude junit from implementation to resolve a version conflict (but not from tests)
configurations {
    implementation {
        exclude(group: 'junit', module: 'junit')
    }
}

dependencies {
    implementation "org.elasticsearch:elasticsearch:${es_version}"

    yamlRestTestImplementation "org.elasticsearch.test:framework:${es_version}"
    // required for ESClientYamlSuiteTestCase; fixes "RestApiYamlIT > initializationError"
    yamlRestTestImplementation "org.apache.logging.log4j:log4j-core:2.17.1"
}

tasks.named("yamlRestTest").configure {
  systemProperty 'tests.security.manager', 'false'
}

// Make sure the ES distribution used for rest tests is the "complete" variant
// Otherwise weirds errors occur (like the geo_shape type is not handled)
testClusters.configureEach {
    testDistribution = 'DEFAULT'
    // disable security to disable failing warnings
    setting 'xpack.security.enabled', 'false'
}
